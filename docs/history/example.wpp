namespace html =
	[ meta info ]
	let doctype = "<!DOCTYPE HTML>" ;
	let charset { x "utf-8" } =
		'<meta charset="' x '">'
	;

	[ html, head, body tags ]
	let html
		lang "en-gb"
		body
	=
		'<html lang="' lang '">' body "</html>"
	;

	let head x = "<head>" x "</head>" ;
	let body x = "<body>" x "</body>" ;

	[ head tags ]
	let title x = "<title>" x "</title>" ;
	let stylesheet f = '<link rel="stylesheet" href="' f '">';

	[ common tags ]
	let h1 x = "<h1>" x "</h1>" ;
	let h2 x = "<h2>" x "</h2>" ;
	let h3 x = "<h3>" x "</h3>" ;
	let h4 x = "<h4>" x "</h4>" ;
	let h5 x = "<h5>" x "</h5>" ;

	let p x = "<p>" x "</p>" ;
	let article x = "<article>" x "</article>" ;
	let header x = "<header>" x "</header>" ;
	let main x = "<main>" x "</main>" ;
;

namespace blog =
	[ creates a header with title and author titles ]
	let header
		title
		author
	=
		html/header (
			html/h1 title
			html/h5 author
		)
	;

	[ blog template with header and posts section ]
	let blog
		header
		posts
	=
		html/doctype
		html/html ? (
			html/head (
				html/charset ..
				html/stylesheet user/stylesheet
				html/title title
			)

			html/body (
				header
				html/main posts
			)
		)
	;

	[ a post with title and body ]
	let post
		title
		body
	=
		html/article (
			html/h1 title
			html/p body
		)
	;
;

namespace user =
	[ meta ]
	let stylesheet = "style.css" ;
	let title = "Wot++ Development Blog" ;
	let author = "Jack Clarke" ;
;


[ blog ]
blog/blog
	blog/header ( user/title user/author )
(
	blog/post "What is Wot++?" (
		"Wot++ is a macro language that can wrap other formats "
		"like html or markdown with ease."
	)

	blog/post "Is Wot++ Turing Complete?" (
		"Wot++ is lazily evaluated and so functions can define "
		"new functions when they are called. Wot++ also has meta-programming "
		"support through the use of the `source` intrinsic which runs a given string "
		"as Wot++ code within the current environment."
	)
)


